.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "MetaCPAN::Client::ResultSet 3"
.TH MetaCPAN::Client::ResultSet 3 "2017-06-25" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MetaCPAN::Client::ResultSet \- A Result Set
.SH "VERSION"
.IX Header "VERSION"
version 2.017000
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Object representing a result from Elastic Search. This is used for the complex
(as in \*(L"MetaCPAN::Client/\*(R"\s-1SEARCH SPEC""\s0 in non-simple) queries to MetaCPAN. It
provides easy access to the scroller and aggregations.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "scroller"
.IX Subsection "scroller"
An MetaCPAN::Client::Scroll object.
.SS "items"
.IX Subsection "items"
An arrayref of items to manually scroll over, instead of a scroller object.
.SS "type"
.IX Subsection "type"
The entity of the result set. Available types:
.IP "\(bu" 4
author
.IP "\(bu" 4
distribution
.IP "\(bu" 4
module
.IP "\(bu" 4
release
.IP "\(bu" 4
favorite
.IP "\(bu" 4
file
.SS "aggregations"
.IX Subsection "aggregations"
The aggregations available in the Elastic Search response.
.SH "METHODS"
.IX Header "METHODS"
.SS "next"
.IX Subsection "next"
Iterator call to fetch the next result set object.
.SS "total"
.IX Subsection "total"
Iterator call to fetch the total amount of objects available in result set.
.SS "has_scroller"
.IX Subsection "has_scroller"
Predicate for \s-1ES\s0 scroller presence.
.SS "\s-1BUILDARGS\s0"
.IX Subsection "BUILDARGS"
Double checks construction of objects. You should never run this yourself.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Sawyer X <xsawyerx@cpan.org>
.IP "\(bu" 4
Mickey Nasriachi <mickey@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Sawyer X.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
