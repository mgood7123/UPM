.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Test::Reporter::Transport::Metabase 3"
.TH Test::Reporter::Transport::Metabase 3 "2016-04-03" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::Reporter::Transport::Metabase \- Metabase transport for Test::Reporter
.SH "VERSION"
.IX Header "VERSION"
version 1.999010
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&    my $report = Test::Reporter\->new(
\&        transport => \*(AqMetabase\*(Aq,
\&        transport_args => [
\&          uri     => \*(Aqhttp://metabase.example.com:3000/\*(Aq,
\&          id_file => \*(Aq/home/jdoe/.metabase/metabase_id.json\*(Aq,
\&        ],
\&    );
\&
\&    # use space\-separated in a CPAN::Reporter config.ini
\&    transport = Metabase uri http://metabase.example.com:3000/ ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module submits a Test::Reporter report to the specified Metabase instance.
.PP
This requires a network connection to the Metabase uri provided.  If you wish
to save reports during offline operation, see
Test::Reporter::Transport::File. (Eventually, you may be able to run a local
Metabase instance to queue reports for later transmission, but this feature has
not yet been developed.)
.SH "USAGE"
.IX Header "USAGE"
See Test::Reporter and Test::Reporter::Transport for general usage
information.
.SS "Transport arguments"
.IX Subsection "Transport arguments"
Unlike most other Transport classes, this class requires transport arguments
to be provided as key-value pairs:
.PP
.Vb 7
\&    my $report = Test::Reporter\->new(
\&        transport => \*(AqMetabase\*(Aq,
\&        transport_args => [
\&          uri     => \*(Aqhttp://metabase.example.com:3000/\*(Aq,
\&          id_file => \*(Aq/home/jdoe/.metabase/metabase_id.json\*(Aq,
\&        ],
\&    );
.Ve
.PP
Arguments include:
.ie n .IP """uri"" (required)" 4
.el .IP "\f(CWuri\fR (required)" 4
.IX Item "uri (required)"
The \f(CW\*(C`uri\*(C'\fR argument gives the network location of a Metabase instance to receive
reports.
.ie n .IP """id_file"" (required)" 4
.el .IP "\f(CWid_file\fR (required)" 4
.IX Item "id_file (required)"
The \f(CW\*(C`id_file\*(C'\fR argument must be a path to a Metabase \s-1ID\s0 file.  If
you do not already have an \s-1ID\s0 file, use the metabase-profile program to
create one.
.Sp
.Vb 1
\&  $ metabase\-profile
.Ve
.Sp
This creates the file \fImetabase_id.json\fR in the current directory.  You
can also give an \f(CW\*(C`\-\-output\*(C'\fR argument to save the file to a different
location or with a different name.
.ie n .IP """client"" (optional)" 4
.el .IP "\f(CWclient\fR (optional)" 4
.IX Item "client (optional)"
The \f(CW\*(C`client\*(C'\fR argument is optional and specifies the type of Metabase::Client
to use to transmit reports to the target Metabase.  It defaults to
Metabase::Client::Simple.
.SH "METHODS"
.IX Header "METHODS"
These methods are only for internal use by Test::Reporter.
.SS "new"
.IX Subsection "new"
.Vb 1
\&    my $sender = Test::Reporter::Transport::File\->new( $params );
.Ve
.PP
The \f(CW\*(C`new\*(C'\fR method is the object constructor.
.SS "send"
.IX Subsection "send"
.Vb 1
\&    $sender\->send( $report );
.Ve
.PP
The \f(CW\*(C`send\*(C'\fR method transmits the report.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests through the issue tracker
at <https://github.com/cpan\-testers/Test\-Reporter\-Transport\-Metabase/issues>.
You will be notified automatically of any progress on your issue.
.SS "Source Code"
.IX Subsection "Source Code"
This is open source software.  The code repository is available for
public review and contribution under the terms of the license.
.PP
<https://github.com/cpan\-testers/Test\-Reporter\-Transport\-Metabase>
.PP
.Vb 1
\&  git clone https://github.com/cpan\-testers/Test\-Reporter\-Transport\-Metabase.git
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
David Golden <dagolden@cpan.org>
.IP "\(bu" 4
Richard Dawe <richdawe@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Chris 'BinGOs' Williams <chris@bingosnet.co.uk>
.IP "\(bu" 4
David Golden <xdg@xdg.me>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2016 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve
