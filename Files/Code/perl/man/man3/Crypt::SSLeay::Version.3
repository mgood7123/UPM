.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Crypt::SSLeay::Version 3"
.TH Crypt::SSLeay::Version 3 "2014-04-22" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Crypt::SSLeay::Version \- Obtain OpenSSL version information
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&    use Crypt::SSLeay::Version qw(\e
\&        openssl_built_on
\&        openssl_cflags
\&        openssl_dir
\&        openssl_platform
\&        openssl_version
\&        openssl_version_number
\&    );
\&
\&    my $version = openssl_version();
\&
\&    if (openssl_cflags() =~ /DOPENSSL_NO_HEARTBEATS/) {
\&        print "OpenSSL was compiled without heartbeats\en";
\&    }
.Ve
.SH "SUMMARY"
.IX Header "SUMMARY"
Exposes information provided by SSLeay_version <https://www.openssl.org/docs/crypto/SSLeay_version.html>.
.SH "EXPORTS"
.IX Header "EXPORTS"
By default, the module exports nothing. You can ask for each subroutine bloew to be exported to your namespace.
.SH "SUBROUTINES"
.IX Header "SUBROUTINES"
.SS "openssl_built_on"
.IX Subsection "openssl_built_on"
The date of the build process in the form \*(L"built on: ...\*(R" if available or ``built on: date not available'' otherwise.
.SS "openssl_cflags"
.IX Subsection "openssl_cflags"
The compiler flags set for the compilation process in the form \*(L"compiler: ...\*(R" if available or \*(L"compiler: information not available\*(R" otherwise.
.SS "openssl_dir"
.IX Subsection "openssl_dir"
The \f(CW\*(C`OPENSSLDIR\*(C'\fR setting of the library build in the form \*(L"\s-1OPENSSLDIR: ...\*(R"\s0 if available or \*(L"\s-1OPENSSLDIR: N/A\*(R"\s0 otherwise.
.SS "openssl_platform"
.IX Subsection "openssl_platform"
The \*(L"Configure\*(R" target of the library build in the form \*(L"platform: ...\*(R" if available or \*(L"platform: information not available\*(R" otherwise.
.SS "openssl_version"
.IX Subsection "openssl_version"
The version of the OpenSSL library including the release date.
.SS "openssl_version_number"
.IX Subsection "openssl_version_number"
The value of the \f(CW\*(C`OPENSSL_VERSION_NUMBER\*(C'\fR macro as an unsigned integer. This value is more like a string as version information is packed into specific nibbles see \f(CW\*(C`crypto/opensslv.h\*(C'\fR in the OpenSSL source and <https://metacpan.org/pod/OpenSSL::Versions|OpenSSL::Versions> for explanation.
.SH "AUTHOR"
.IX Header "AUTHOR"
A. Sinan Unur \f(CW\*(C`<nanis@cpan.org>\*(C'\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2014 A. Sinan Unur.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it under the terms of Artistic License 2.0 <http://www.perlfoundation.org/artistic_license_2_0>.
