.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Perl 3"
.TH Perl 3 "2007-03-11" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Term::Size::Perl \- Perl extension for retrieving terminal size (Perl version)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Term::Size::Perl;
\&
\&    ($columns, $rows) = Term::Size::Perl::chars *STDOUT{IO};
\&    ($x, $y) = Term::Size::Perl::pixels;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Yet another implementation of \f(CW\*(C`Term::Size\*(C'\fR. Now
in pure Perl, with the exception of a C probe run
on build time.
.SS "\s-1FUNCTIONS\s0"
.IX Subsection "FUNCTIONS"
.IP "\fBchars\fR" 4
.IX Item "chars"
.Vb 2
\&    ($columns, $rows) = chars($h);
\&    $columns = chars($h);
.Ve
.Sp
\&\f(CW\*(C`chars\*(C'\fR returns the terminal size in units of characters
corresponding to the given filehandle \f(CW$h\fR.
If the argument is ommitted, \f(CW*STDIN{IO}\fR is used.
In scalar context, it returns the terminal width.
.IP "\fBpixels\fR" 4
.IX Item "pixels"
.Vb 2
\&    ($x, $y) = pixels($h);
\&    $x = pixels($h);
.Ve
.Sp
\&\f(CW\*(C`pixels\*(C'\fR returns the terminal size in units of pixels
corresponding to the given filehandle \f(CW$h\fR.
If the argument is ommitted, \f(CW*STDIN{IO}\fR is used.
In scalar context, it returns the terminal width.
.Sp
Many systems with character-only terminals will return \f(CW\*(C`(0, 0)\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
It all began with Term::Size by Tim Goodwin. You may want to
have a look at:
.PP
.Vb 4
\&    Term::Size
\&    Term::Size::Unix
\&    Term::Size::Win32
\&    Term::Size::ReadKey
.Ve
.PP
It would be helpful if you send me the \fIParams.pm\fR generated by
the probe at build time.
Please reports bugs via \s-1CPAN RT,\s0 
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Term\-Size\-Perl
.SH "BUGS"
.IX Header "BUGS"
I am having some hard time to make tests run correctly
under the \f(CW\*(C`cpan\*(C'\fR script. Some Unix systems do not seem to provide a
working tty inside automatic installers. I think it needs
some skip tests, but I am yet not sure what should be the
portable tests for this.
.PP
Update:
This distribution uses new tests to skip if filehandle
is not a tty. It was noticed that \f(CW\*(C`Test::Harness\*(C'\fR and
\&\f(CW\*(C`prove\*(C'\fR, for instance, provide a non-tty \s-1STDOUT\s0 
to the test script and automatic installers
could provide a non-tty \s-1STDIN.\s0 So the former tests 
were basically wrong. I am improving my understanding
of the involved issues and I hope to soon fix the
tests for all of Term::Size modules.
.SH "AUTHOR"
.IX Header "AUTHOR"
A. R. Ferreira, <ferreira@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006\-2007 by A. R. Ferreira
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
