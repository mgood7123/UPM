.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "CPAN::Testers::Fact::InstalledModules 3"
.TH CPAN::Testers::Fact::InstalledModules 3 "2015-01-27" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CPAN::Testers::Fact::InstalledModules \- Versions of particular modules installed on a system
.SH "VERSION"
.IX Header "VERSION"
version 1.999003
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 11
\&  my $fact = CPAN::Testers::Fact::InstalledModules\->new({
\&    resource => \*(Aqcpan:///distfile/RJBS/CPAN\-Metabase\-Fact\-0.001.tar.gz\*(Aq,
\&    content     => {
\&      prereqs => {
\&        \*(AqTest::More\*(Aq => \*(Aq0.80\*(Aq,
\&      },
\&      toolchain => {
\&        \*(AqCPAN\*(Aq => \*(Aq1.92\*(Aq, 
\&      },
\&    },
\&  });
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Versions detected of modules installed on a system.  There are three valid
types: prereqs, toolchain, undeclared.
.PP
Prereqs are the versions of modules listed in any of the prerequisite fields.
.PP
Toolchain module versions are intended to reflect the state of the toolchain
used to test the distribution (e.g.  \s-1CPAN,\s0 Test::Harness, etc.).
.PP
Undeclared module versions capture the version of modules that were detected
as being used by the distribution, but that were not listed explicitly as 
prerequisites.  This will often be core modules or submodules, but could 
include missing dependencies.
.SH "USAGE"
.IX Header "USAGE"
See Metabase::Fact.
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature using the \s-1CPAN\s0 Request Tracker.  
Bugs can be submitted through the web interface at 
<http://rt.cpan.org/Dist/Display.html?Queue=CPAN\-Testers\-Report>
.PP
When submitting a bug or request, please include a test-file or a patch to an
existing test-file that illustrates the bug or desired feature.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Golden <dagolden@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2015 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve
