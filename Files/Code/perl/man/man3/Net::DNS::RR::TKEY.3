.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Net::DNS::RR::TKEY 3"
.TH Net::DNS::RR::TKEY 3 "2017-08-18" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DNS::RR::TKEY \- DNS TKEY resource record
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Net::DNS;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Class for \s-1DNS TSIG\s0 Key (\s-1TKEY\s0) resource records.
.SH "METHODS"
.IX Header "METHODS"
The available methods are those inherited from the base class augmented
by the type-specific methods defined in this package.
.PP
Use of undocumented package features or direct access to internal data
structures is discouraged and could result in program termination or
other unpredictable behaviour.
.SS "algorithm"
.IX Subsection "algorithm"
.Vb 2
\&    $algorithm = $rr\->algorithm;
\&    $rr\->algorithm( $algorithm );
.Ve
.PP
The algorithm name is in the form of a domain name with the same
meaning as in [\s-1RFC 2845\s0].  The algorithm determines how the secret
keying material agreed to using the \s-1TKEY RR\s0 is actually used to derive
the algorithm specific key.
.SS "inception"
.IX Subsection "inception"
.Vb 2
\&    $inception = $rr\->inception;
\&    $rr\->inception( $inception );
.Ve
.PP
Time expressed as the number of non-leap seconds modulo 2**32 since the
beginning of January 1970 \s-1GMT.\s0
.SS "expiration"
.IX Subsection "expiration"
.Vb 2
\&    $expiration = $rr\->expiration;
\&    $rr\->expiration( $expiration );
.Ve
.PP
Time expressed as the number of non-leap seconds modulo 2**32 since the
beginning of January 1970 \s-1GMT.\s0
.SS "mode"
.IX Subsection "mode"
.Vb 2
\&    $mode = $rr\->mode;
\&    $rr\->mode( $mode );
.Ve
.PP
The mode field specifies the general scheme for key agreement or the
purpose of the \s-1TKEY DNS\s0 message, as defined in [\s-1RFC2930\s0(2.5)].
.SS "error"
.IX Subsection "error"
.Vb 2
\&    $error = $rr\->error;
\&    $rr\->error( $error );
.Ve
.PP
The error code field is an extended \s-1RCODE.\s0
.SS "key"
.IX Subsection "key"
.Vb 2
\&    $key = $rr\->key;
\&    $rr\->key( $key );
.Ve
.PP
Sequence of octets representing the key exchange data.
The meaning of this data depends on the mode.
.SS "other"
.IX Subsection "other"
.Vb 2
\&    $other = $rr\->other;
\&    $rr\->other( $other );
.Ve
.PP
Content not defined in the [\s-1RFC2930\s0] specification but may be used
in future extensions.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c)2000 Andrew Tridgell.
.PP
All rights reserved.
.PP
Package template (c)2009,2012 O.M.Kolkman and R.W.Franks.
.SH "LICENSE"
.IX Header "LICENSE"
Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted, provided
that the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation, and that the name of the author not be used in advertising
or publicity pertaining to distribution of the software without specific
prior written permission.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl, Net::DNS, Net::DNS::RR, \s-1RFC2930\s0
